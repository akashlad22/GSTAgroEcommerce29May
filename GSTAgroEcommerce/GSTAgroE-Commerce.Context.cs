//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GSTAgroEcommerce
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblGSTAddress> tblGSTAddresses { get; set; }
        public virtual DbSet<tblGSTAdmin> tblGSTAdmins { get; set; }
        public virtual DbSet<tblGSTBankDetail> tblGSTBankDetails { get; set; }
        public virtual DbSet<tblGSTBuyer> tblGSTBuyers { get; set; }
        public virtual DbSet<tblGSTBuyerPayment> tblGSTBuyerPayments { get; set; }
        public virtual DbSet<tblGSTCategory> tblGSTCategories { get; set; }
        public virtual DbSet<tblGSTCity> tblGSTCities { get; set; }
        public virtual DbSet<tblGSTCountry> tblGSTCountries { get; set; }
        public virtual DbSet<tblGSTCouponSetting> tblGSTCouponSettings { get; set; }
        public virtual DbSet<tblGSTGst> tblGSTGsts { get; set; }
        public virtual DbSet<tblGSTOffer> tblGSTOffers { get; set; }
        public virtual DbSet<tblGSTOrder> tblGSTOrders { get; set; }
        public virtual DbSet<tblGSTProduct> tblGSTProducts { get; set; }
        public virtual DbSet<tblGSTProductOffer> tblGSTProductOffers { get; set; }
        public virtual DbSet<tblGSTRatingandFeedback> tblGSTRatingandFeedbacks { get; set; }
        public virtual DbSet<tblGSTRewardSetting> tblGSTRewardSettings { get; set; }
        public virtual DbSet<tblGSTSeller> tblGSTSellers { get; set; }
        public virtual DbSet<tblGSTState> tblGSTStates { get; set; }
        public virtual DbSet<tblGSTStatu> tblGSTStatus { get; set; }
        public virtual DbSet<tblGSTSubCategory1> tblGSTSubCategory1 { get; set; }
        public virtual DbSet<tblGSTSubCategory2> tblGSTSubCategory2 { get; set; }
        public virtual DbSet<tblGSTSubCategory3> tblGSTSubCategory3 { get; set; }
        public virtual DbSet<tblGSTWallet> tblGSTWallets { get; set; }
        public virtual DbSet<tblGSTPolicy> tblGSTPolicies { get; set; }
        public virtual DbSet<tblGSTProductImage> tblGSTProductImages { get; set; }
        public virtual DbSet<tblGSTSellerDocument> tblGSTSellerDocuments { get; set; }
        public virtual DbSet<tblGSTSellerPayment> tblGSTSellerPayments { get; set; }
        public virtual DbSet<tblGSTShare> tblGSTShares { get; set; }
    
        public virtual ObjectResult<SPAgroAdmin_Result> SPAgroAdmin(string adminId, string adminFullName, string emailId, string password, Nullable<int> sellerId, string categoryName, Nullable<int> categoryId, string categoryCode, string rejectionReason, Nullable<int> subCategory1Id, string subCategory1Name, string subCategory1Code, Nullable<int> subCategory2Id, string subCategory2Name, string subCategory2Code, Nullable<int> subCategory3Id, string subCategory3Name, string subCategory3Code, Nullable<int> statusId, string status, string sellerCode, string productCode, string sellerFullName, string businessName, string mobileNo, string productName, string officeAddress, Nullable<System.DateTime> date, Nullable<double> mRP, Nullable<double> maxStock, Nullable<double> minStock, string buyerCode, string orderCode, string flag)
        {
            var adminIdParameter = adminId != null ?
                new ObjectParameter("AdminId", adminId) :
                new ObjectParameter("AdminId", typeof(string));
    
            var adminFullNameParameter = adminFullName != null ?
                new ObjectParameter("AdminFullName", adminFullName) :
                new ObjectParameter("AdminFullName", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var sellerIdParameter = sellerId.HasValue ?
                new ObjectParameter("SellerId", sellerId) :
                new ObjectParameter("SellerId", typeof(int));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var categoryCodeParameter = categoryCode != null ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(string));
    
            var rejectionReasonParameter = rejectionReason != null ?
                new ObjectParameter("RejectionReason", rejectionReason) :
                new ObjectParameter("RejectionReason", typeof(string));
    
            var subCategory1IdParameter = subCategory1Id.HasValue ?
                new ObjectParameter("SubCategory1Id", subCategory1Id) :
                new ObjectParameter("SubCategory1Id", typeof(int));
    
            var subCategory1NameParameter = subCategory1Name != null ?
                new ObjectParameter("SubCategory1Name", subCategory1Name) :
                new ObjectParameter("SubCategory1Name", typeof(string));
    
            var subCategory1CodeParameter = subCategory1Code != null ?
                new ObjectParameter("SubCategory1Code", subCategory1Code) :
                new ObjectParameter("SubCategory1Code", typeof(string));
    
            var subCategory2IdParameter = subCategory2Id.HasValue ?
                new ObjectParameter("SubCategory2Id", subCategory2Id) :
                new ObjectParameter("SubCategory2Id", typeof(int));
    
            var subCategory2NameParameter = subCategory2Name != null ?
                new ObjectParameter("SubCategory2Name", subCategory2Name) :
                new ObjectParameter("SubCategory2Name", typeof(string));
    
            var subCategory2CodeParameter = subCategory2Code != null ?
                new ObjectParameter("SubCategory2Code", subCategory2Code) :
                new ObjectParameter("SubCategory2Code", typeof(string));
    
            var subCategory3IdParameter = subCategory3Id.HasValue ?
                new ObjectParameter("SubCategory3Id", subCategory3Id) :
                new ObjectParameter("SubCategory3Id", typeof(int));
    
            var subCategory3NameParameter = subCategory3Name != null ?
                new ObjectParameter("SubCategory3Name", subCategory3Name) :
                new ObjectParameter("SubCategory3Name", typeof(string));
    
            var subCategory3CodeParameter = subCategory3Code != null ?
                new ObjectParameter("SubCategory3Code", subCategory3Code) :
                new ObjectParameter("SubCategory3Code", typeof(string));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var sellerCodeParameter = sellerCode != null ?
                new ObjectParameter("SellerCode", sellerCode) :
                new ObjectParameter("SellerCode", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var sellerFullNameParameter = sellerFullName != null ?
                new ObjectParameter("SellerFullName", sellerFullName) :
                new ObjectParameter("SellerFullName", typeof(string));
    
            var businessNameParameter = businessName != null ?
                new ObjectParameter("BusinessName", businessName) :
                new ObjectParameter("BusinessName", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var officeAddressParameter = officeAddress != null ?
                new ObjectParameter("OfficeAddress", officeAddress) :
                new ObjectParameter("OfficeAddress", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var mRPParameter = mRP.HasValue ?
                new ObjectParameter("MRP", mRP) :
                new ObjectParameter("MRP", typeof(double));
    
            var maxStockParameter = maxStock.HasValue ?
                new ObjectParameter("MaxStock", maxStock) :
                new ObjectParameter("MaxStock", typeof(double));
    
            var minStockParameter = minStock.HasValue ?
                new ObjectParameter("MinStock", minStock) :
                new ObjectParameter("MinStock", typeof(double));
    
            var buyerCodeParameter = buyerCode != null ?
                new ObjectParameter("BuyerCode", buyerCode) :
                new ObjectParameter("BuyerCode", typeof(string));
    
            var orderCodeParameter = orderCode != null ?
                new ObjectParameter("OrderCode", orderCode) :
                new ObjectParameter("OrderCode", typeof(string));
    
            var flagParameter = flag != null ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPAgroAdmin_Result>("SPAgroAdmin", adminIdParameter, adminFullNameParameter, emailIdParameter, passwordParameter, sellerIdParameter, categoryNameParameter, categoryIdParameter, categoryCodeParameter, rejectionReasonParameter, subCategory1IdParameter, subCategory1NameParameter, subCategory1CodeParameter, subCategory2IdParameter, subCategory2NameParameter, subCategory2CodeParameter, subCategory3IdParameter, subCategory3NameParameter, subCategory3CodeParameter, statusIdParameter, statusParameter, sellerCodeParameter, productCodeParameter, sellerFullNameParameter, businessNameParameter, mobileNoParameter, productNameParameter, officeAddressParameter, dateParameter, mRPParameter, maxStockParameter, minStockParameter, buyerCodeParameter, orderCodeParameter, flagParameter);
        }
    
        public virtual ObjectResult<SPAgroBuyer_Result> SPAgroBuyer(string buyerCode, string buyerFullName, string emailId, string password, string mobileNo, string alternatemobileNo, Nullable<System.DateTime> dOB, string gender, string adhaarNo, string pancardNo, string adharphoto, string pancardphoto, Nullable<double> salary, Nullable<System.DateTime> registrationdate, Nullable<int> productid, string productCode, string productname, Nullable<double> mrp, string mainImage, Nullable<int> categoryid, string categorycode, string categoryname, Nullable<int> statusid, Nullable<int> subcategory1id, string subcategory1code, string subcategory1name, Nullable<int> subcategory2id, string subcategory2code, string subcategory2name, Nullable<int> subcategory3id, string subcategory3code, string subcategory3name, string usercode, Nullable<int> countryid, Nullable<int> cityid, Nullable<int> stateid, string orderCode, string productQuantity, Nullable<int> addressId, Nullable<int> orderStatusId, Nullable<System.DateTime> processDate, Nullable<int> shippingCharges, Nullable<int> shareId, Nullable<bool> isNotify, Nullable<System.DateTime> expectedDeliveryDate, string rejectedByUserCode, string rejectionReason, Nullable<bool> isDelete, string home, string office, string other, Nullable<int> quantity, string couponcode, Nullable<int> rewardId, Nullable<int> totalReward, Nullable<int> usedReward, Nullable<System.DateTime> coupanexpDate, string paymentMode, Nullable<System.DateTime> paymentDate, string transactionid, string invoiceNo, string flag)
        {
            var buyerCodeParameter = buyerCode != null ?
                new ObjectParameter("BuyerCode", buyerCode) :
                new ObjectParameter("BuyerCode", typeof(string));
    
            var buyerFullNameParameter = buyerFullName != null ?
                new ObjectParameter("BuyerFullName", buyerFullName) :
                new ObjectParameter("BuyerFullName", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var alternatemobileNoParameter = alternatemobileNo != null ?
                new ObjectParameter("AlternatemobileNo", alternatemobileNo) :
                new ObjectParameter("AlternatemobileNo", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var adhaarNoParameter = adhaarNo != null ?
                new ObjectParameter("AdhaarNo", adhaarNo) :
                new ObjectParameter("AdhaarNo", typeof(string));
    
            var pancardNoParameter = pancardNo != null ?
                new ObjectParameter("PancardNo", pancardNo) :
                new ObjectParameter("PancardNo", typeof(string));
    
            var adharphotoParameter = adharphoto != null ?
                new ObjectParameter("adharphoto", adharphoto) :
                new ObjectParameter("adharphoto", typeof(string));
    
            var pancardphotoParameter = pancardphoto != null ?
                new ObjectParameter("pancardphoto", pancardphoto) :
                new ObjectParameter("pancardphoto", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(double));
    
            var registrationdateParameter = registrationdate.HasValue ?
                new ObjectParameter("registrationdate", registrationdate) :
                new ObjectParameter("registrationdate", typeof(System.DateTime));
    
            var productidParameter = productid.HasValue ?
                new ObjectParameter("productid", productid) :
                new ObjectParameter("productid", typeof(int));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var productnameParameter = productname != null ?
                new ObjectParameter("productname", productname) :
                new ObjectParameter("productname", typeof(string));
    
            var mrpParameter = mrp.HasValue ?
                new ObjectParameter("mrp", mrp) :
                new ObjectParameter("mrp", typeof(double));
    
            var mainImageParameter = mainImage != null ?
                new ObjectParameter("MainImage", mainImage) :
                new ObjectParameter("MainImage", typeof(string));
    
            var categoryidParameter = categoryid.HasValue ?
                new ObjectParameter("categoryid", categoryid) :
                new ObjectParameter("categoryid", typeof(int));
    
            var categorycodeParameter = categorycode != null ?
                new ObjectParameter("categorycode", categorycode) :
                new ObjectParameter("categorycode", typeof(string));
    
            var categorynameParameter = categoryname != null ?
                new ObjectParameter("categoryname", categoryname) :
                new ObjectParameter("categoryname", typeof(string));
    
            var statusidParameter = statusid.HasValue ?
                new ObjectParameter("statusid", statusid) :
                new ObjectParameter("statusid", typeof(int));
    
            var subcategory1idParameter = subcategory1id.HasValue ?
                new ObjectParameter("subcategory1id", subcategory1id) :
                new ObjectParameter("subcategory1id", typeof(int));
    
            var subcategory1codeParameter = subcategory1code != null ?
                new ObjectParameter("subcategory1code", subcategory1code) :
                new ObjectParameter("subcategory1code", typeof(string));
    
            var subcategory1nameParameter = subcategory1name != null ?
                new ObjectParameter("subcategory1name", subcategory1name) :
                new ObjectParameter("subcategory1name", typeof(string));
    
            var subcategory2idParameter = subcategory2id.HasValue ?
                new ObjectParameter("subcategory2id", subcategory2id) :
                new ObjectParameter("subcategory2id", typeof(int));
    
            var subcategory2codeParameter = subcategory2code != null ?
                new ObjectParameter("subcategory2code", subcategory2code) :
                new ObjectParameter("subcategory2code", typeof(string));
    
            var subcategory2nameParameter = subcategory2name != null ?
                new ObjectParameter("subcategory2name", subcategory2name) :
                new ObjectParameter("subcategory2name", typeof(string));
    
            var subcategory3idParameter = subcategory3id.HasValue ?
                new ObjectParameter("subcategory3id", subcategory3id) :
                new ObjectParameter("subcategory3id", typeof(int));
    
            var subcategory3codeParameter = subcategory3code != null ?
                new ObjectParameter("subcategory3code", subcategory3code) :
                new ObjectParameter("subcategory3code", typeof(string));
    
            var subcategory3nameParameter = subcategory3name != null ?
                new ObjectParameter("subcategory3name", subcategory3name) :
                new ObjectParameter("subcategory3name", typeof(string));
    
            var usercodeParameter = usercode != null ?
                new ObjectParameter("usercode", usercode) :
                new ObjectParameter("usercode", typeof(string));
    
            var countryidParameter = countryid.HasValue ?
                new ObjectParameter("countryid", countryid) :
                new ObjectParameter("countryid", typeof(int));
    
            var cityidParameter = cityid.HasValue ?
                new ObjectParameter("cityid", cityid) :
                new ObjectParameter("cityid", typeof(int));
    
            var stateidParameter = stateid.HasValue ?
                new ObjectParameter("stateid", stateid) :
                new ObjectParameter("stateid", typeof(int));
    
            var orderCodeParameter = orderCode != null ?
                new ObjectParameter("OrderCode", orderCode) :
                new ObjectParameter("OrderCode", typeof(string));
    
            var productQuantityParameter = productQuantity != null ?
                new ObjectParameter("ProductQuantity", productQuantity) :
                new ObjectParameter("ProductQuantity", typeof(string));
    
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            var orderStatusIdParameter = orderStatusId.HasValue ?
                new ObjectParameter("OrderStatusId", orderStatusId) :
                new ObjectParameter("OrderStatusId", typeof(int));
    
            var processDateParameter = processDate.HasValue ?
                new ObjectParameter("ProcessDate", processDate) :
                new ObjectParameter("ProcessDate", typeof(System.DateTime));
    
            var shippingChargesParameter = shippingCharges.HasValue ?
                new ObjectParameter("ShippingCharges", shippingCharges) :
                new ObjectParameter("ShippingCharges", typeof(int));
    
            var shareIdParameter = shareId.HasValue ?
                new ObjectParameter("ShareId", shareId) :
                new ObjectParameter("ShareId", typeof(int));
    
            var isNotifyParameter = isNotify.HasValue ?
                new ObjectParameter("IsNotify", isNotify) :
                new ObjectParameter("IsNotify", typeof(bool));
    
            var expectedDeliveryDateParameter = expectedDeliveryDate.HasValue ?
                new ObjectParameter("ExpectedDeliveryDate", expectedDeliveryDate) :
                new ObjectParameter("ExpectedDeliveryDate", typeof(System.DateTime));
    
            var rejectedByUserCodeParameter = rejectedByUserCode != null ?
                new ObjectParameter("RejectedByUserCode", rejectedByUserCode) :
                new ObjectParameter("RejectedByUserCode", typeof(string));
    
            var rejectionReasonParameter = rejectionReason != null ?
                new ObjectParameter("RejectionReason", rejectionReason) :
                new ObjectParameter("RejectionReason", typeof(string));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("IsDelete", isDelete) :
                new ObjectParameter("IsDelete", typeof(bool));
    
            var homeParameter = home != null ?
                new ObjectParameter("Home", home) :
                new ObjectParameter("Home", typeof(string));
    
            var officeParameter = office != null ?
                new ObjectParameter("Office", office) :
                new ObjectParameter("Office", typeof(string));
    
            var otherParameter = other != null ?
                new ObjectParameter("Other", other) :
                new ObjectParameter("Other", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var couponcodeParameter = couponcode != null ?
                new ObjectParameter("Couponcode", couponcode) :
                new ObjectParameter("Couponcode", typeof(string));
    
            var rewardIdParameter = rewardId.HasValue ?
                new ObjectParameter("RewardId", rewardId) :
                new ObjectParameter("RewardId", typeof(int));
    
            var totalRewardParameter = totalReward.HasValue ?
                new ObjectParameter("TotalReward", totalReward) :
                new ObjectParameter("TotalReward", typeof(int));
    
            var usedRewardParameter = usedReward.HasValue ?
                new ObjectParameter("UsedReward", usedReward) :
                new ObjectParameter("UsedReward", typeof(int));
    
            var coupanexpDateParameter = coupanexpDate.HasValue ?
                new ObjectParameter("CoupanexpDate", coupanexpDate) :
                new ObjectParameter("CoupanexpDate", typeof(System.DateTime));
    
            var paymentModeParameter = paymentMode != null ?
                new ObjectParameter("PaymentMode", paymentMode) :
                new ObjectParameter("PaymentMode", typeof(string));
    
            var paymentDateParameter = paymentDate.HasValue ?
                new ObjectParameter("PaymentDate", paymentDate) :
                new ObjectParameter("PaymentDate", typeof(System.DateTime));
    
            var transactionidParameter = transactionid != null ?
                new ObjectParameter("Transactionid", transactionid) :
                new ObjectParameter("Transactionid", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var flagParameter = flag != null ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPAgroBuyer_Result>("SPAgroBuyer", buyerCodeParameter, buyerFullNameParameter, emailIdParameter, passwordParameter, mobileNoParameter, alternatemobileNoParameter, dOBParameter, genderParameter, adhaarNoParameter, pancardNoParameter, adharphotoParameter, pancardphotoParameter, salaryParameter, registrationdateParameter, productidParameter, productCodeParameter, productnameParameter, mrpParameter, mainImageParameter, categoryidParameter, categorycodeParameter, categorynameParameter, statusidParameter, subcategory1idParameter, subcategory1codeParameter, subcategory1nameParameter, subcategory2idParameter, subcategory2codeParameter, subcategory2nameParameter, subcategory3idParameter, subcategory3codeParameter, subcategory3nameParameter, usercodeParameter, countryidParameter, cityidParameter, stateidParameter, orderCodeParameter, productQuantityParameter, addressIdParameter, orderStatusIdParameter, processDateParameter, shippingChargesParameter, shareIdParameter, isNotifyParameter, expectedDeliveryDateParameter, rejectedByUserCodeParameter, rejectionReasonParameter, isDeleteParameter, homeParameter, officeParameter, otherParameter, quantityParameter, couponcodeParameter, rewardIdParameter, totalRewardParameter, usedRewardParameter, coupanexpDateParameter, paymentModeParameter, paymentDateParameter, transactionidParameter, invoiceNoParameter, flagParameter);
        }
    
        public virtual ObjectResult<SPAgroSeller_Result> SPAgroSeller(string sellerCode, string sellerFullName, string emailId, string password, Nullable<int> sellerId, string businessName, string businessPinCode, string mobileNo, string alternateMobileNo, string gender, Nullable<int> cityId, Nullable<int> pincode, Nullable<System.DateTime> dOB, Nullable<System.DateTime> registrationDate, string rejectionReason, Nullable<System.DateTime> sellerApprovalDate, Nullable<int> statusId, Nullable<int> addressId, string home, string office, string other, Nullable<int> sellerDocumentId, string aadharNo, string panCardNo, string aadharImage, string panImage, string gSTIN, string businessAadharNo, string businessPanNo, string businessAdharImage, string businessPanImage, string cityName, Nullable<int> stateId, string stateName, Nullable<int> countryId, string countryName, string userCode, Nullable<int> sellerPaymentId, string paymentMode, string paymentDate, Nullable<double> paidAmount, string transactionId, string paymentDoneFile, Nullable<bool> isDelete, Nullable<int> productId, string productCode, string categoryCode, string productName, Nullable<double> currentStock, Nullable<double> minRangeDiscount, Nullable<double> mRP, Nullable<double> productWeight, string description, Nullable<double> discount, Nullable<bool> isProductReturnable, Nullable<bool> isproductExpirable, string productExpiryDuration, Nullable<bool> isProductSeasonable, string seasonName, string productWeightRange, Nullable<System.DateTime> productRegistrationDate, Nullable<System.DateTime> productApprovalDate, string manufacturerName, Nullable<double> maximumStock, Nullable<double> minimumStock, string rejectionReasonfromAdmin, Nullable<int> sellerTransactionId, Nullable<double> totalAmount, Nullable<int> totalOrder, Nullable<int> buyerId, string buyerCode, string buyerFullName, string adharNo, string panNo, string adharPhoto, string panCardPhoto, Nullable<double> salary, Nullable<int> paymentId, string orderCode, string invoiceNo, Nullable<int> bankDetailsId, string bankName, string iFSCCode, string branchName, string accountType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> offerId, Nullable<int> sellerOfferId, Nullable<int> adminOfferId, string categoryName, string subCategory1Code, string subCategory1Name, string subCategory2Code, string subCategory2Name, Nullable<double> commission, Nullable<double> quantity, string mainImage, string image1, string image2, string image3, string flag)
        {
            var sellerCodeParameter = sellerCode != null ?
                new ObjectParameter("SellerCode", sellerCode) :
                new ObjectParameter("SellerCode", typeof(string));
    
            var sellerFullNameParameter = sellerFullName != null ?
                new ObjectParameter("SellerFullName", sellerFullName) :
                new ObjectParameter("SellerFullName", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var sellerIdParameter = sellerId.HasValue ?
                new ObjectParameter("SellerId", sellerId) :
                new ObjectParameter("SellerId", typeof(int));
    
            var businessNameParameter = businessName != null ?
                new ObjectParameter("BusinessName", businessName) :
                new ObjectParameter("BusinessName", typeof(string));
    
            var businessPinCodeParameter = businessPinCode != null ?
                new ObjectParameter("BusinessPinCode", businessPinCode) :
                new ObjectParameter("BusinessPinCode", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var alternateMobileNoParameter = alternateMobileNo != null ?
                new ObjectParameter("AlternateMobileNo", alternateMobileNo) :
                new ObjectParameter("AlternateMobileNo", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(int));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var registrationDateParameter = registrationDate.HasValue ?
                new ObjectParameter("RegistrationDate", registrationDate) :
                new ObjectParameter("RegistrationDate", typeof(System.DateTime));
    
            var rejectionReasonParameter = rejectionReason != null ?
                new ObjectParameter("RejectionReason", rejectionReason) :
                new ObjectParameter("RejectionReason", typeof(string));
    
            var sellerApprovalDateParameter = sellerApprovalDate.HasValue ?
                new ObjectParameter("SellerApprovalDate", sellerApprovalDate) :
                new ObjectParameter("SellerApprovalDate", typeof(System.DateTime));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            var homeParameter = home != null ?
                new ObjectParameter("Home", home) :
                new ObjectParameter("Home", typeof(string));
    
            var officeParameter = office != null ?
                new ObjectParameter("Office", office) :
                new ObjectParameter("Office", typeof(string));
    
            var otherParameter = other != null ?
                new ObjectParameter("Other", other) :
                new ObjectParameter("Other", typeof(string));
    
            var sellerDocumentIdParameter = sellerDocumentId.HasValue ?
                new ObjectParameter("SellerDocumentId", sellerDocumentId) :
                new ObjectParameter("SellerDocumentId", typeof(int));
    
            var aadharNoParameter = aadharNo != null ?
                new ObjectParameter("AadharNo", aadharNo) :
                new ObjectParameter("AadharNo", typeof(string));
    
            var panCardNoParameter = panCardNo != null ?
                new ObjectParameter("PanCardNo", panCardNo) :
                new ObjectParameter("PanCardNo", typeof(string));
    
            var aadharImageParameter = aadharImage != null ?
                new ObjectParameter("AadharImage", aadharImage) :
                new ObjectParameter("AadharImage", typeof(string));
    
            var panImageParameter = panImage != null ?
                new ObjectParameter("PanImage", panImage) :
                new ObjectParameter("PanImage", typeof(string));
    
            var gSTINParameter = gSTIN != null ?
                new ObjectParameter("GSTIN", gSTIN) :
                new ObjectParameter("GSTIN", typeof(string));
    
            var businessAadharNoParameter = businessAadharNo != null ?
                new ObjectParameter("BusinessAadharNo", businessAadharNo) :
                new ObjectParameter("BusinessAadharNo", typeof(string));
    
            var businessPanNoParameter = businessPanNo != null ?
                new ObjectParameter("BusinessPanNo", businessPanNo) :
                new ObjectParameter("BusinessPanNo", typeof(string));
    
            var businessAdharImageParameter = businessAdharImage != null ?
                new ObjectParameter("BusinessAdharImage", businessAdharImage) :
                new ObjectParameter("BusinessAdharImage", typeof(string));
    
            var businessPanImageParameter = businessPanImage != null ?
                new ObjectParameter("BusinessPanImage", businessPanImage) :
                new ObjectParameter("BusinessPanImage", typeof(string));
    
            var cityNameParameter = cityName != null ?
                new ObjectParameter("CityName", cityName) :
                new ObjectParameter("CityName", typeof(string));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            var stateNameParameter = stateName != null ?
                new ObjectParameter("StateName", stateName) :
                new ObjectParameter("StateName", typeof(string));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var countryNameParameter = countryName != null ?
                new ObjectParameter("CountryName", countryName) :
                new ObjectParameter("CountryName", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var sellerPaymentIdParameter = sellerPaymentId.HasValue ?
                new ObjectParameter("SellerPaymentId", sellerPaymentId) :
                new ObjectParameter("SellerPaymentId", typeof(int));
    
            var paymentModeParameter = paymentMode != null ?
                new ObjectParameter("PaymentMode", paymentMode) :
                new ObjectParameter("PaymentMode", typeof(string));
    
            var paymentDateParameter = paymentDate != null ?
                new ObjectParameter("PaymentDate", paymentDate) :
                new ObjectParameter("PaymentDate", typeof(string));
    
            var paidAmountParameter = paidAmount.HasValue ?
                new ObjectParameter("PaidAmount", paidAmount) :
                new ObjectParameter("PaidAmount", typeof(double));
    
            var transactionIdParameter = transactionId != null ?
                new ObjectParameter("TransactionId", transactionId) :
                new ObjectParameter("TransactionId", typeof(string));
    
            var paymentDoneFileParameter = paymentDoneFile != null ?
                new ObjectParameter("PaymentDoneFile", paymentDoneFile) :
                new ObjectParameter("PaymentDoneFile", typeof(string));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("IsDelete", isDelete) :
                new ObjectParameter("IsDelete", typeof(bool));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var categoryCodeParameter = categoryCode != null ?
                new ObjectParameter("CategoryCode", categoryCode) :
                new ObjectParameter("CategoryCode", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var currentStockParameter = currentStock.HasValue ?
                new ObjectParameter("CurrentStock", currentStock) :
                new ObjectParameter("CurrentStock", typeof(double));
    
            var minRangeDiscountParameter = minRangeDiscount.HasValue ?
                new ObjectParameter("MinRangeDiscount", minRangeDiscount) :
                new ObjectParameter("MinRangeDiscount", typeof(double));
    
            var mRPParameter = mRP.HasValue ?
                new ObjectParameter("MRP", mRP) :
                new ObjectParameter("MRP", typeof(double));
    
            var productWeightParameter = productWeight.HasValue ?
                new ObjectParameter("ProductWeight", productWeight) :
                new ObjectParameter("ProductWeight", typeof(double));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(double));
    
            var isProductReturnableParameter = isProductReturnable.HasValue ?
                new ObjectParameter("IsProductReturnable", isProductReturnable) :
                new ObjectParameter("IsProductReturnable", typeof(bool));
    
            var isproductExpirableParameter = isproductExpirable.HasValue ?
                new ObjectParameter("IsproductExpirable", isproductExpirable) :
                new ObjectParameter("IsproductExpirable", typeof(bool));
    
            var productExpiryDurationParameter = productExpiryDuration != null ?
                new ObjectParameter("ProductExpiryDuration", productExpiryDuration) :
                new ObjectParameter("ProductExpiryDuration", typeof(string));
    
            var isProductSeasonableParameter = isProductSeasonable.HasValue ?
                new ObjectParameter("IsProductSeasonable", isProductSeasonable) :
                new ObjectParameter("IsProductSeasonable", typeof(bool));
    
            var seasonNameParameter = seasonName != null ?
                new ObjectParameter("SeasonName", seasonName) :
                new ObjectParameter("SeasonName", typeof(string));
    
            var productWeightRangeParameter = productWeightRange != null ?
                new ObjectParameter("ProductWeightRange", productWeightRange) :
                new ObjectParameter("ProductWeightRange", typeof(string));
    
            var productRegistrationDateParameter = productRegistrationDate.HasValue ?
                new ObjectParameter("ProductRegistrationDate", productRegistrationDate) :
                new ObjectParameter("ProductRegistrationDate", typeof(System.DateTime));
    
            var productApprovalDateParameter = productApprovalDate.HasValue ?
                new ObjectParameter("ProductApprovalDate", productApprovalDate) :
                new ObjectParameter("ProductApprovalDate", typeof(System.DateTime));
    
            var manufacturerNameParameter = manufacturerName != null ?
                new ObjectParameter("ManufacturerName", manufacturerName) :
                new ObjectParameter("ManufacturerName", typeof(string));
    
            var maximumStockParameter = maximumStock.HasValue ?
                new ObjectParameter("MaximumStock", maximumStock) :
                new ObjectParameter("MaximumStock", typeof(double));
    
            var minimumStockParameter = minimumStock.HasValue ?
                new ObjectParameter("MinimumStock", minimumStock) :
                new ObjectParameter("MinimumStock", typeof(double));
    
            var rejectionReasonfromAdminParameter = rejectionReasonfromAdmin != null ?
                new ObjectParameter("RejectionReasonfromAdmin", rejectionReasonfromAdmin) :
                new ObjectParameter("RejectionReasonfromAdmin", typeof(string));
    
            var sellerTransactionIdParameter = sellerTransactionId.HasValue ?
                new ObjectParameter("SellerTransactionId", sellerTransactionId) :
                new ObjectParameter("SellerTransactionId", typeof(int));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(double));
    
            var totalOrderParameter = totalOrder.HasValue ?
                new ObjectParameter("TotalOrder", totalOrder) :
                new ObjectParameter("TotalOrder", typeof(int));
    
            var buyerIdParameter = buyerId.HasValue ?
                new ObjectParameter("BuyerId", buyerId) :
                new ObjectParameter("BuyerId", typeof(int));
    
            var buyerCodeParameter = buyerCode != null ?
                new ObjectParameter("BuyerCode", buyerCode) :
                new ObjectParameter("BuyerCode", typeof(string));
    
            var buyerFullNameParameter = buyerFullName != null ?
                new ObjectParameter("BuyerFullName", buyerFullName) :
                new ObjectParameter("BuyerFullName", typeof(string));
    
            var adharNoParameter = adharNo != null ?
                new ObjectParameter("AdharNo", adharNo) :
                new ObjectParameter("AdharNo", typeof(string));
    
            var panNoParameter = panNo != null ?
                new ObjectParameter("PanNo", panNo) :
                new ObjectParameter("PanNo", typeof(string));
    
            var adharPhotoParameter = adharPhoto != null ?
                new ObjectParameter("AdharPhoto", adharPhoto) :
                new ObjectParameter("AdharPhoto", typeof(string));
    
            var panCardPhotoParameter = panCardPhoto != null ?
                new ObjectParameter("PanCardPhoto", panCardPhoto) :
                new ObjectParameter("PanCardPhoto", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("Salary", salary) :
                new ObjectParameter("Salary", typeof(double));
    
            var paymentIdParameter = paymentId.HasValue ?
                new ObjectParameter("PaymentId", paymentId) :
                new ObjectParameter("PaymentId", typeof(int));
    
            var orderCodeParameter = orderCode != null ?
                new ObjectParameter("OrderCode", orderCode) :
                new ObjectParameter("OrderCode", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("invoiceNo", invoiceNo) :
                new ObjectParameter("invoiceNo", typeof(string));
    
            var bankDetailsIdParameter = bankDetailsId.HasValue ?
                new ObjectParameter("BankDetailsId", bankDetailsId) :
                new ObjectParameter("BankDetailsId", typeof(int));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var iFSCCodeParameter = iFSCCode != null ?
                new ObjectParameter("IFSCCode", iFSCCode) :
                new ObjectParameter("IFSCCode", typeof(string));
    
            var branchNameParameter = branchName != null ?
                new ObjectParameter("BranchName", branchName) :
                new ObjectParameter("BranchName", typeof(string));
    
            var accountTypeParameter = accountType != null ?
                new ObjectParameter("AccountType", accountType) :
                new ObjectParameter("AccountType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var offerIdParameter = offerId.HasValue ?
                new ObjectParameter("OfferId", offerId) :
                new ObjectParameter("OfferId", typeof(int));
    
            var sellerOfferIdParameter = sellerOfferId.HasValue ?
                new ObjectParameter("SellerOfferId", sellerOfferId) :
                new ObjectParameter("SellerOfferId", typeof(int));
    
            var adminOfferIdParameter = adminOfferId.HasValue ?
                new ObjectParameter("AdminOfferId", adminOfferId) :
                new ObjectParameter("AdminOfferId", typeof(int));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var subCategory1CodeParameter = subCategory1Code != null ?
                new ObjectParameter("SubCategory1Code", subCategory1Code) :
                new ObjectParameter("SubCategory1Code", typeof(string));
    
            var subCategory1NameParameter = subCategory1Name != null ?
                new ObjectParameter("SubCategory1Name", subCategory1Name) :
                new ObjectParameter("SubCategory1Name", typeof(string));
    
            var subCategory2CodeParameter = subCategory2Code != null ?
                new ObjectParameter("SubCategory2Code", subCategory2Code) :
                new ObjectParameter("SubCategory2Code", typeof(string));
    
            var subCategory2NameParameter = subCategory2Name != null ?
                new ObjectParameter("SubCategory2Name", subCategory2Name) :
                new ObjectParameter("SubCategory2Name", typeof(string));
    
            var commissionParameter = commission.HasValue ?
                new ObjectParameter("Commission", commission) :
                new ObjectParameter("Commission", typeof(double));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(double));
    
            var mainImageParameter = mainImage != null ?
                new ObjectParameter("MainImage", mainImage) :
                new ObjectParameter("MainImage", typeof(string));
    
            var image1Parameter = image1 != null ?
                new ObjectParameter("Image1", image1) :
                new ObjectParameter("Image1", typeof(string));
    
            var image2Parameter = image2 != null ?
                new ObjectParameter("Image2", image2) :
                new ObjectParameter("Image2", typeof(string));
    
            var image3Parameter = image3 != null ?
                new ObjectParameter("Image3", image3) :
                new ObjectParameter("Image3", typeof(string));
    
            var flagParameter = flag != null ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPAgroSeller_Result>("SPAgroSeller", sellerCodeParameter, sellerFullNameParameter, emailIdParameter, passwordParameter, sellerIdParameter, businessNameParameter, businessPinCodeParameter, mobileNoParameter, alternateMobileNoParameter, genderParameter, cityIdParameter, pincodeParameter, dOBParameter, registrationDateParameter, rejectionReasonParameter, sellerApprovalDateParameter, statusIdParameter, addressIdParameter, homeParameter, officeParameter, otherParameter, sellerDocumentIdParameter, aadharNoParameter, panCardNoParameter, aadharImageParameter, panImageParameter, gSTINParameter, businessAadharNoParameter, businessPanNoParameter, businessAdharImageParameter, businessPanImageParameter, cityNameParameter, stateIdParameter, stateNameParameter, countryIdParameter, countryNameParameter, userCodeParameter, sellerPaymentIdParameter, paymentModeParameter, paymentDateParameter, paidAmountParameter, transactionIdParameter, paymentDoneFileParameter, isDeleteParameter, productIdParameter, productCodeParameter, categoryCodeParameter, productNameParameter, currentStockParameter, minRangeDiscountParameter, mRPParameter, productWeightParameter, descriptionParameter, discountParameter, isProductReturnableParameter, isproductExpirableParameter, productExpiryDurationParameter, isProductSeasonableParameter, seasonNameParameter, productWeightRangeParameter, productRegistrationDateParameter, productApprovalDateParameter, manufacturerNameParameter, maximumStockParameter, minimumStockParameter, rejectionReasonfromAdminParameter, sellerTransactionIdParameter, totalAmountParameter, totalOrderParameter, buyerIdParameter, buyerCodeParameter, buyerFullNameParameter, adharNoParameter, panNoParameter, adharPhotoParameter, panCardPhotoParameter, salaryParameter, paymentIdParameter, orderCodeParameter, invoiceNoParameter, bankDetailsIdParameter, bankNameParameter, iFSCCodeParameter, branchNameParameter, accountTypeParameter, startDateParameter, endDateParameter, offerIdParameter, sellerOfferIdParameter, adminOfferIdParameter, categoryNameParameter, subCategory1CodeParameter, subCategory1NameParameter, subCategory2CodeParameter, subCategory2NameParameter, commissionParameter, quantityParameter, mainImageParameter, image1Parameter, image2Parameter, image3Parameter, flagParameter);
        }
    }
}
