@model AgroEcommerceLibrary.Seller.Seller

@{
    ViewBag.Title = "Registration";
    //Layout = "~/Views/Shared/Seller_Layout.cshtml";
}

<style>
    label {
        font-weight: 600;
        color: #666;
    }

    body {
        background: #f1f1f1;
    }

    .box8 {
        box-shadow: 0px 0px 5px 1px #999;
    }

    .mx-t3 {
        margin-top: -3rem;
    }

    .left {
        margin-left: 794px;
        margin-top: -825px;
    }

    .middel {
        margin-left: 398px;
        margin-top: -808px;
    }

    .alert {
        color: red;
        font-size: 20px;
    }

    .box4 {
        background-color: #ffffff;
    }
</style>

<body style="background-image: linear-gradient(to right, white, yellowgreen);">
    @using (Html.BeginForm("Registration", "Seller", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()


        <div class="container mt-3">
            <form>

                <div class="row jumbotron box4">
                    <div class="col-sm-12 mx-t3 mb-4">
                        <h2 class="text-center text-info">Registration</h2>
                    </div>
                    <div>
                        @if (TempData["EmailError"] != null)
                        {
                            <div class="alert">
                                <a href="#" style="color:red" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                                <strong style="color:red;"></strong>@TempData["EmailError"]
                            </div>
                        }
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.SellerFullName, htmlAttributes: new { @class = " label-align required" })

                        <div class="">
                            @Html.EditorFor(model => model.SellerFullName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Full Name" } })
                            @Html.ValidationMessageFor(model => model.SellerFullName, "", new { @class = "text-danger", required = "required" })
                            <br />
                        </div>
                        @*<div class="col-md-6 col-sm-6 ">
                <input type="text" id="SellerFullName" name="SellerFullName" required="required" class="form-control">
            </div>*@

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.BusinessName, htmlAttributes: new { @class = "label-align required" })

                        <div class="">
                            @Html.EditorFor(model => model.BusinessName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Business Name" } })
                            @Html.ValidationMessageFor(model => model.BusinessName, "", new { @class = "text-danger", required = "required" })
                            <br />
                        </div>

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.BusinessPinCode, htmlAttributes: new { @class = " label-align required" })

                        <div class="">
                            @Html.EditorFor(model => model.BusinessPinCode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Business Pincode" } })
                            @Html.ValidationMessageFor(model => model.BusinessPinCode, "", new { @class = "text-danger", required = "required" })
                            <br />
                        </div>
                        @*<div class="col-md-6 col-sm-6 ">
                <input type="text" id="BusinessPinCode" name="BusinessPinCode" required="required" class="form-control">
            </div>*@
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "label-align required" })

                        <div class=" ">
                            @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter EmailId" } })
                            @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger", required = "required" })
                            <br />
                        </div>
                        @*<div class="col-md-6 col-sm-6 ">
                <input type="text" id="EmailId" name="EmailId" required="required" class="form-control">
            </div>*@

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "label-align required" })

                        <div class="">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Password" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger", required = "required" })
                            <br />
                        </div>
                        @*<div class="col-md-6 col-sm-6 ">
                <input type="text" id="Password" name="Password" required="required" class="form-control">
            </div>*@
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = " label-align required" })

                        <div class="">
                            @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Mobile Number" } })
                            @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger", required = "required" })
                            <br />
                        </div>
                        @*<div class="col-md-6 col-sm-6 ">
                <input type="text" id="MobileNo" name="MobileNo" required="required" class="form-control">
            </div>*@
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.AlternateMobileNo, htmlAttributes: new { @class = " label-align required" })

                        <div class="">
                            @Html.EditorFor(model => model.AlternateMobileNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter  AlterMobile Number" } })
                            @Html.ValidationMessageFor(model => model.AlternateMobileNo, "", new { @class = "text-danger", required = "required" })
                            <br />
                        </div>
                        @*<div class="col-md-6 col-sm-6 ">
                <input type="text" id="AlternateMobileNo" name="AlternateMobileNo" required="required" class="form-control">
            </div>*@
                    </div>
                    <div class="form-group gender">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "label-align required" })
                        <div id="gender" class="btn-group" data-toggle="buttons">
                            <label class="btn btn-primary" style="margin-left: 10px; font-size: 20px;" data-toggle-class="btn-primary" data-toggle-passive-class="btn-default">
                                <input type="radio" name="gender" value="male" class="join-btn flat"> &nbsp; Male &nbsp;
                            </label>
                            <label style="margin-left:10px;font-size:20px;" class="btn btn-primary" data-toggle-class="btn-primary" data-toggle-passive-class="btn-default">
                                <input type="radio" name="gender" value="female" class="join-btn flat"> Female
                            </label>
                        </div>

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PinCode, htmlAttributes: new { @class = " label-align required" })
                        @*<div class="col-md-6 col-sm-6 ">
                <input type="text" id="PinCode" name="PinCode" required="required" class="form-control">
            </div>*@
                        <div class=" ">
                            @Html.EditorFor(model => model.PinCode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter  Pincode Number" } })
                            @Html.ValidationMessageFor(model => model.PinCode, "", new { @class = "text-danger", required = "required" })
                            <br />
                        </div>

                    </div>



                    <div class="middel">
                        <div class="form-group" style="height:32px;width:279px;">
                            @Html.LabelFor(model => model.SellerType, htmlAttributes: new { @class = "label-align required" })
                            <div class="form-group">

                                @Html.DropDownListFor(model => model.SellerType, new SelectList(ViewBag.list), "Selet", new { @class = "form-control", @placeholder = "Enter CountryName" })<br />

                                @*<select id="Country">-----select state---</select>*@
                                @Html.ValidationMessageFor(model => model.SellerType, "", new { @class = "text-danger", required = "required" })
                                <br />
                            </div>
                        </div>

                        <br></br>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CountryName, htmlAttributes: new { @class = "label-align required" })
                            <div class="">

                                @Html.DropDownList("Country", null, "---select Country-----", new { @class = "form-control", @placeholder = "Enter CountryName" })
                                @*<select id="Country">-----select state---</select>*@
                                @Html.ValidationMessageFor(model => model.CountryName, "", new { @class = "text-danger", required = "required" })
                                <br />
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.StateName, htmlAttributes: new { @class = " label-align required" })
                            <div class="">
                                @*@Html.DropDownList("StateName", null, "---select State-----")*@
                                <select id="state" class="form-control">-----select state---</select>

                                @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger", required = "required" })
                                <br />
                            </div>
                        </div>
                        <div class=" form-group">
                            @Html.LabelFor(model => model.CityId, "City Name", htmlAttributes: new { @class = " label-align required" })
                            <div class="">

                                @*@Html.DropDownList("CityId", null, htmlAttributes: new { @class = "form-control city" })*@
                                <select id="CityId" name="CityId" class="form-control">-----select city---</select>

                                @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger", required = "required" })
                                <br />
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = " label-align required" })

                            <div class=" ">
                                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger", required = "required" })
                                <br />
                            </div>


                        </div>

                        <div class=" form-group">
                            @Html.LabelFor(model => model.GSTIN, htmlAttributes: new { @class = " label-align required" })
                            @*<div class="col-md-6 col-sm-6 ">
                    <input type="text" id="GSTIN" name="GSTIN" required="required" class="form-control">
                </div>*@
                            <div class="">
                                @Html.EditorFor(model => model.GSTIN, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter GSTIN Number" } })
                                @Html.ValidationMessageFor(model => model.GSTIN, "", new { @class = "text-danger", required = "required" })
                                <br />
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Other, htmlAttributes: new { @class = " label-align required" })

                            <div class="">
                                @Html.EditorFor(model => model.Other, "Other Address", new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Other Address" } })
                                @Html.ValidationMessageFor(model => model.Other, "", new { @class = "text-danger", required = "required" })
                            </div>
                          
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Office, "Office Address", htmlAttributes: new { @class = " label-align required" })

                            <div class="">
                                @Html.EditorFor(model => model.Office, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Office Addresss" } })
                                @Html.ValidationMessageFor(model => model.Office, "", new { @class = "text-danger", required = "required" })
                                <br />
                            </div>
                            @*<div class="col-md-6 col-sm-6 ">
                    <input type="text" id="Office" name="Office" required="required" class="form-control">
                </div>*@

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Home, "Home Address", htmlAttributes: new { @class = "label-align required" })

                            <div class="">
                                @Html.EditorFor(model => model.Home, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Home Addresss" } })
                                @Html.ValidationMessageFor(model => model.Home, "", new { @class = "text-danger", required = "required" })
                            </div>


                        </div>
                       



                    </div>
                  
                   
                        <div class="left">

                            <div class="form-group">
                                @Html.LabelFor(model => model, " Seller Image", htmlAttributes: new { @class = " label-align required" })
                                <div class="">
                                    <button class="mybtn" style="positon:center;">

                                        <img id="Img" src="" alt="Photo" width="110" height="120" style="border:1px;margin-top:10px;margin-left:20px;" class="rounded-circle" />
                                        <i class="fa fa-upload "></i>Photo Upload


                                        <input type="file" id="File" name="Photo" onchange="document.getElementById('Img').src = window.URL.createObjectURL(this.files[0])" required />

                                        @*@Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })*@
                                    </button>


                                </div>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.AadharNo, htmlAttributes: new { @class = " label-align required" })
                                @*<div class="col-md-6 col-sm-6 ">
                        <input type="text" id="AadharNo" name="AadharNo" required="required" class="form-control">
                    </div>*@
                                <div class=" ">
                                    @Html.EditorFor(model => model.AadharNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Aadhar Number" } })
                                    @Html.ValidationMessageFor(model => model.AadharNo, "", new { @class = "text-danger", required = "required" })
                                </div>

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.AadharImage, htmlAttributes: new { @class = " label-align required" })
                                <div class="">
                                    <button class="mybtn" style="positon:center;">
                                        <i class="fa fa-upload"></i>Aadhaar Upload


                                        <input type="file" id="File" name="AadharImage" onchange="document.getElementById('AU').src = window.URL.createObjectURL(this.files[0])" required />
                                        @Html.ValidationMessageFor(model => model.AadharImage, "", new { @class = "text-danger" })
                                    </button>
                                    @*<img id="AU" src="" alt="Aadhaar" width="100" height="50" style="border:1px;margin-top:20px;margin-left:25px;" />*@

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PanCardNo, htmlAttributes: new { @class = " label-align required" })

                                <div class="">
                                    @Html.EditorFor(model => model.PanCardNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Pancard Number " } })
                                    @Html.ValidationMessageFor(model => model.PanCardNo, "", new { @class = "text-danger", required = "required" })
                                </div>
                                @*<div class="col-md-6 col-sm-6 ">
                        <input type="text" id="PanCardNo" name="PanCardNo" required="required" class="form-control">
                    </div>*@

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PanImage, htmlAttributes: new { @class = " label-align required" })
                                <div class="">
                                    <button class="mybtn" style="positon:center;">
                                        <i class="fa fa-upload"></i>PanCard Upload


                                        <input type="file" id="File" name="Pancard" onchange="document.getElementById('PU').src = window.URL.createObjectURL(this.files[0])" required />
                                        @Html.ValidationMessageFor(model => model.PanImage, "", new { @class = "text-danger" })
                                    </button>
                                    @*<img id="PU" src="" alt="PanImage" width="150" height="100" style="border:1px;margin-top:20px;margin-left:25px;" />*@

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.BusinessAadharNo, htmlAttributes: new { @class = " label-align required" })

                                <div class="">
                                    @Html.EditorFor(model => model.BusinessAadharNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter BusinessAdhar Number " } })
                                    @Html.ValidationMessageFor(model => model.BusinessAadharNo, "", new { @class = "text-danger", required = "required" })
                                </div>
                                @*<div class="col-md-6 col-sm-6 ">
                        <input type="text" id="BusinessAadharNo" name="BusinessAadharNo" required="required" class="form-control">
                    </div>*@

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.BusinessAdharImage, htmlAttributes: new { @class = " label-align required" })
                                <div class="">
                                    <button class="mybtn" style="positon:center;">
                                        <i class="fa fa-upload"></i> Business Aadhaar Upload


                                        <input type="file" id="File" name="businessAdhar" onchange="document.getElementById('BAU').src = window.URL.createObjectURL(this.files[0])" required />
                                        @Html.ValidationMessageFor(model => model.BusinessAdharImage, "", new { @class = "text-danger" })
                                    </button>
                                    @*<img id="BAU" src="" alt="BusinessAdharImage" width="150" height="100" style="border:1px;margin-top:20px;margin-left:25px;" />*@

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.BusinessPanNo, htmlAttributes: new { @class = "label-align required" })

                                <div class="">
                                    @Html.EditorFor(model => model.BusinessPanNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Business Pancard Number" } })
                                    @Html.ValidationMessageFor(model => model.BusinessPanNo, "", new { @class = "text-danger", required = "required" })
                                </div>
                                @*<div class="col-md-6 col-sm-6 ">
                        <input type="text" id="BusinessPanNo" name="BusinessPanNo" required="required" class="form-control">
                    </div>*@
                            </div>
                            &nbsp;
                            <div class="form-group">
                                @Html.LabelFor(model => model.BusinessPanImage, htmlAttributes: new { @class = " label-align required" })
                                <div class="">
                                    <button class="mybtn" style="positon:center;">
                                        <i class="fa fa-upload"></i> Business PanCard Upload


                                        <input type="file" id="File" name="BusinessPan" onchange="document.getElementById('BPU').src = window.URL.createObjectURL(this.files[0])" required />
                                        @Html.ValidationMessageFor(model => model.BusinessPanImage, "", new { @class = "text-danger" })
                                    </button>
                                    @*<img id="BPU" src="" alt="BusinessPanImage" width="150" height="100" style="border:1px;margin-top:20px;margin-left:25px;" />*@

                                </div>
                            </div>
                        








                    </div>
                    <br />
                    <hr />
                    <h3> Bank Details*</h3>

                    <div class="row">
                        <div class="form-group col-lg-4">
                            @Html.LabelFor(model => model.BankHolderName, htmlAttributes: new { @class = "label-align required" })

                            <div class="">
                                @Html.EditorFor(model => model.BankHolderName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Bank holder Name" } })
                                @Html.ValidationMessageFor(model => model.BankHolderName, "", new { @class = "text-danger", required = "required" })
                            </div>

                        </div>
                        <div class="form-group col-lg-4">
                            @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "label-align required" })

                            <div class="">
                                @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Bank Name" } })
                                @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger", required = "required" })
                            </div>

                        </div>
                        <div class="form-group AccountType col-lg-4">
                            @Html.LabelFor(model => model.AccountType, htmlAttributes: new { @class = "label-align required" })
                            <div id="AccountType" class="btn-group" data-toggle="buttons">
                                <label class="btn btn-primary" style="margin-left: 10px; font-size: 20px;" data-toggle-class="btn-primary" data-toggle-passive-class="btn-default">
                                    <input type="radio" name="AccountType" value="Saving" class="join-btn flat"> &nbsp; Saving &nbsp;
                                </label>
                                <label style="margin-left:10px;font-size:20px;" class="btn btn-primary" data-toggle-class="btn-primary" data-toggle-passive-class="btn-default">
                                    <input type="radio" name="AccountType" value="Current" class="join-btn flat"> Current
                                </label>
                            </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-lg-4">
                            @Html.LabelFor(model => model.AccountNo, htmlAttributes: new { @class = "label-align required" })

                            <div class="">
                                @Html.EditorFor(model => model.AccountNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Account Number" } })
                                @Html.ValidationMessageFor(model => model.AccountNo, "", new { @class = "text-danger", required = "required" })
                            </div>

                        </div>
                        <div class="form-group col-lg-4">
                            @Html.LabelFor(model => model.IFSCCode, htmlAttributes: new { @class = "label-align required" })

                            <div class="">
                                @Html.EditorFor(model => model.IFSCCode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter IFSCC Number" } })
                                @Html.ValidationMessageFor(model => model.IFSCCode, "", new { @class = "text-danger", required = "required" })
                            </div>

                        </div>
                        <div class="form-group col-lg-4">
                            @Html.LabelFor(model => model.BrachName, htmlAttributes: new { @class = "label-align required" })

                            <div class="">
                                @Html.EditorFor(model => model.BrachName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Branch Name" } })
                                @Html.ValidationMessageFor(model => model.BrachName, "", new { @class = "text-danger", required = "required" })
                            </div>

                        </div>
                    </div>





                    <div class="form-group" style=" align-content:center">
                        <div class="btncls" style="margin-left:408px;margin-top:70px;">
                            @*<button class="btn btn-primary" type="button">Cancel</button>*@
                            <button class="btn btn-primary" type="reset" style="align-content: center; height: 40px; width: 70px; font-size: 16px;">Cancel</button>

                            <input type="submit" value="Save" class="btn btn-primary" style="align-content: center; height: 40px; width: 70px; font-size: 16px; " />

                        </div>
                    </div>

                </div>
</form>
        </div>



        <script src="~/Scripts/jquery-3.4.1.min.js"></script>
        <script>
            $(document).ready(function () {
                $("#Country").change(function () {
                    var id = $(this).val();
                    // alert(id)
                    $("#state").empty();
                    $.get("/Seller/State_Bind", { Country_Id: id }, function (data) {
                        // alert("welcome in get")
                        var v = "<option>---Select---</option>";
                        $.each(data, function (i, v1) {
                            v += "<option value=" + v1.Value + ">" + v1.Text + "</option>";
                        });
                        $("#state").html(v);
                        /*$("#state").select2();*/
                    });
                });
                $("#state").change(function () {
                    var id = $(this).val();
                    // alert(id)
                    $("#CityId").empty();
                    $.get("/Seller/City_Bind", { State_Id: id }, function (data) {
                        // alert("welcome in get")
                        var v = "<option>---Select---</option>";
                        $.each(data, function (i, v1) {
                            v += "<option value=" + v1.Value + ">" + v1.Text + "</option>";
                        });
                        $("#CityId").html(v);
                        /* $("#CityId").select2();*/
                    });
                });
                //$('#Photo').bind('change', function () {
                //    var maxSizeKB = 20; //Size in KB
                //    var maxSize = maxSizeKB * 1024; //File size is returned in Bytes
                //    if (this.files[0].size > maxSize) {
                //        $(this).val("");
                //        alert("Max size exceeded");
                //        return false;
                //    }
                //});



            });
        </script>





    }
</body>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}