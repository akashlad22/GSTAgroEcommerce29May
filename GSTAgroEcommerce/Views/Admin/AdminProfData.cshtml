@model AgroEcommerceLibrary.Admin.Admin

@{
    ViewBag.Title = "AdminProfData";
    Layout = "~/Views/Shared/Admin_Layout.cshtml";
}


@using (Html.BeginForm("UpdateProfileAdmin", "Admin"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <h4>Admin</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.AdminId)

        <main class="col-md-9 ms-sm-auto common col-lg-10 px-md-4">
            <div class="row" style="margin-left:300px">
                <div class="form-group col-lg-3">
                    <b>@Html.HiddenFor(model => model.Photo, htmlAttributes: new { @class = "control-label" })  </b>

                </div>
                <div class="col-lg-5">
                    <img src="/Content/Images/DocImages/@Model.Photo" alt="Photo" width="180" height="160" style="border:1px;margin-top:10px;margin-left:20px;" class="rounded-circle" />

                    @* @Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <br />
            <div class="row" style="margin-left:300px">
                <div class="form-group col-lg-3">
                    <b> @Html.LabelFor(model => model.AdminFullName, htmlAttributes: new { @class = "control-label" }) : </b>

                </div>
                <div class="col-lg-5">
                    @Html.EditorFor(model => model.AdminFullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AdminFullName, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row" style="margin-left:300px">
                <div class="form-group col-lg-3">
                    <b> @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label" }) : </b>

                </div>
                <div class="col-lg-5">
                    @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row" style="margin-left:300px">
                <div class="form-group col-lg-3">
                    <b> @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label" }) : </b>

                </div>
                <div class="col-lg-5">
                    @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            <div class="row" style="margin-left:300px">
                <div class="form-group col-lg-3">
                    <b> @Html.LabelFor(model => model.CountryName, htmlAttributes: new { @class = "label-align required" }) : </b>

                </div>
                <div class="col-lg-5">

                    @Html.DropDownListFor(model => model.CountryId, new SelectList(ViewBag.Country, "Value", "Text"), "Select", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })

                </div>
            </div>
            <br />
            <div class="row" style="margin-left:300px">
                <div class="form-group col-lg-3">
                    <b> @Html.LabelFor(model => model.StateName, htmlAttributes: new { @class = " label-align required" }) : </b>

                </div>
                <div class="col-lg-5">
                    @*@Html.DropDownList("StateName", null, "---select State-----")*@
                    <select id="state" class="form-control">
                        <option value="@ViewBag.StateId">@ViewBag.State</option>
                    </select>

                    @Html.ValidationMessageFor(model => model.StateName, "", new { @class = "text-danger", required = "required" })

                </div>
            </div>
            <br />
            <div class="row" style="margin-left:300px">
                <div class=" form-group col-lg-3">
                    <b> @Html.LabelFor(model => model.CityId, "City Name", htmlAttributes: new { @class = " label-align required" }) : </b>

                </div>
                <div class="col-lg-5">

                    @*@Html.DropDownList("CityId", null, htmlAttributes: new { @class = "form-control city" })*@
                    <select id="CityId" name="CityId" class="form-control">

                        <option value="@ViewBag.CityId">@ViewBag.City</option>
                    </select>

                    @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger", required = "required" })

                </div>
            </div>
            <br />





            <div class="row" style="margin-left:300px">
                <div class="form-group col-lg-3">
                    <b> @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" }) : </b>

                </div>
                <div class="col-lg-5">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row" style="margin-left:300px">
                <div class="form-group col-lg-3">
                    <b>@Html.LabelFor(model => model.PinCode, htmlAttributes: new { @class = "control-label" }) : </b>

                </div>
                <div class="col-lg-5">
                    @Html.EditorFor(model => model.PinCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PinCode, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />














            <div class="form-group" style="margin-left:900px">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" id="btnUpdate" />
                </div>
            </div>
        </main>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/Buyer_js/SweetAlert.js"></script>
<script>
    $(document).ready(function () {
        $("#CountryId").click(function () {
            var id = $(this).val();
            // alert(id)
            $("#state").empty();
            $.get("/Admin/State_Bind", { Country_Id: id }, function (data) {
                // alert("welcome in get")
                var v = "<option>---Select---</option>";
                $.each(data, function (i, v1) {
                    v += "<option value=" + v1.Value + ">" + v1.Text + "</option>";
                });
                $("#state").html(v);
                /*$("#state").select2();*/
            });
        });
        $("#state").change(function () {
            var id = $(this).val();
            // alert(id)
            $("#CityId").empty();
            $.get("/Admin/City_Bind", { State_Id: id }, function (data) {
                // alert("welcome in get")
                var v = "<option>---Select---</option>";
                $.each(data, function (i, v1) {
                    v += "<option value=" + v1.Value + ">" + v1.Text + "</option>";
                });
                $("#CityId").html(v);
                /* $("#CityId").select2();*/
            });
        });
        /* $("#btnUpdate").click(function () {

             swal({
                 *//* title: "Good job!",*//*
text: "Save sucessfully",
icon: "success",
button: "Aww yiss!",
timer: 1000000
});
})*/
        /* $("#state").Enter(function () {
             var id = $("#CountryId").val();
             // alert(id)
             $("#CityId").empty();
             $.get("/Admin/State_Bind", { Country_Id: id }, function (data) {
                 // alert("welcome in get")
                 var v = "<option>---Select---</option>";
                 $.each(data, function (i, v1) {
                     v += "<option value=" + v1.Value + ">" + v1.Text + "</option>";
                 });
                 $("#state").html(v);
                 *//*$("#state").select2();*//*
});
});*/

        //$('#Photo').bind('change', function () {
        //    var maxSizeKB = 20; //Size in KB
        //    var maxSize = maxSizeKB * 1024; //File size is returned in Bytes
        //    if (this.files[0].size > maxSize) {
        //        $(this).val("");
        //        alert("Max size exceeded");
        //        return false;
        //    }
        //});



    });
</script>
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
}



