@model AgroEcommerceLibrary.Admin.Admin

@{
    //ViewBag.Title = "RejectSellerStatus";
    //Layout = "~/Views/Shared/Admin_Layout.cshtml";
}

<marquee><h2 style="color: palegoldenrod">  Reject Seller Status . . .</h2></marquee>

@using (Html.BeginForm("RejectSellerStatus1", "Admin", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @*<main class="col-md-12 ms-sm-auto common col-lg-12 px-md-4">*@
    <div>
        <div class="form-horizontal">
            <h4 style="text-align:center"> &#9883; Admin &#9883;</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @*<div class="form-group">
                    @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CategoryId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CategoryCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CategoryCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Commision, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Commision, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Commision, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.HiddenFor(model => model.AdminId)

                <div class="form-group">
                    @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                    </div>
                </div>*@



            @*<div class="form-group">
                    @Html.LabelFor(model => model.SellerId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SellerId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SellerId, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            @*<div class="card shadow-lg p-3 mb-5 bg-white rounded" style="width: 60%; margin-left: 230px; background-color: palegoldenrod">*@
            <div class="row" style="margin-top:50px">
                <div class="form-group col-sm-4">
                    <b>@Html.LabelFor(model => model.SellerCode) : </b>

                </div>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.SellerCode, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       @readonly = "readonly"
                   }
               })
                    @Html.ValidationMessageFor(model => model.SellerCode, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            <div class="row">
                <div class="form-group col-sm-4">
                    <b>@Html.LabelFor(model => model.SellerFullName) : </b>

                </div>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.SellerFullName, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       @readonly = "readonly"
                   }
               })
                    @Html.ValidationMessageFor(model => model.SellerFullName, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            <div class="row">
                <div class="form-group col-sm-4">
                    <b>@Html.LabelFor(model => model.BusinessName) : </b>

                </div>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.BusinessName, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       @readonly = "readonly"
                   }
               })
                    @Html.ValidationMessageFor(model => model.BusinessName, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            <div class="row">
                <div class="form-group col-sm-4">
                    <b>@Html.LabelFor(model => model.MobileNo) : </b>

                </div>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.MobileNo, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       @readonly = "readonly"
                   }
               })
                    @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            <div class="row">
                <div class="form-group col-sm-4">
                    <b> @Html.LabelFor(model => model.Status) : </b>

                </div>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.Status, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       @readonly = "readonly"
                   }
               })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            <div class="row">
                <div class="form-group col-sm-4">
                    <b> @Html.LabelFor(model => model.RejectionReason) : </b>

                </div>
                <div class="col-sm-7" id="reason">
                    @Html.DropDownListFor(model => model.RejectionReason, (List<SelectListItem>)ViewBag.RejectSellerReason, "--Select--", new { @class = "form-control" })
                    @*<p style="color:red"> Please Select an option </p>*@
                    @Html.ValidationMessageFor(model => model.RejectionReason, "Please Select the Reason", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            @*<div class="form-group">
                    @Html.LabelFor(model => model.AadharNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AadharNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AadharNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AadharImage, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AadharImage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AadharImage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BusinessAadharNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.BusinessAadharNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BusinessAadharNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BusinessAdharImage, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.BusinessAdharImage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BusinessAdharImage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BusinessPanNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.BusinessPanNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BusinessPanNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BusinessPanImage, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.BusinessPanImage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BusinessPanImage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PanCardNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PanCardNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PanCardNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PanImage, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PanImage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PanImage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.GSTIN, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.GSTIN, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.GSTIN, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OfficeAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OfficeAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OfficeAddress, "", new { @class = "text-danger" })
                    </div>
                </div>*@



            @*<div class="form-group">
                    @Html.LabelFor(model => model.RejectionReason, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RejectionReason, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RejectionReason, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StatusId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StatusId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MRP, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MRP, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MRP, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MaximumStock, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MaximumStock, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MaximumStock, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MinimumStock, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MinimumStock, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MinimumStock, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MainImage, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MainImage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MainImage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsProductReturnable, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsProductReturnable)
                            @Html.ValidationMessageFor(model => model.IsProductReturnable, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsProductExpirable, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsProductExpirable)
                            @Html.ValidationMessageFor(model => model.IsProductExpirable, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductExpiryDuration, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductExpiryDuration, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductExpiryDuration, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductRegistrationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductRegistrationDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductRegistrationDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ManufacturerName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ManufacturerName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ManufacturerName, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            <hr />
            <div class="row">
                <div class="form-group col-lg-2" style="margin-left: 270px">
                    <div>
                        @*@Html.ActionLink("Reject", "RejectSellerStatus1", new { SellerCode = Model.SellerCode }, new { @class = "btn btn-primary border-warning" })*@
                        <input type="submit" value="Reject" class="btn btn-danger border-warning" />
                    </div>
                </div>
                <div style="text-align:right;margin-left:15px" class="col-lg-2">
                    <button type="button" class="btn response" style="background-color: green">
                        @Html.ActionLink("Close", "PendingSellerList", new { @class = "btn-xs" }, new { @style = "color:white;" })
                    </button>
                    @*<input type="submit" formaction="@Url.Action("PendingProductList","Admin")" value="Close" />*@
                </div>
            </div>

            @*</div>*@
        </div>
    </div>
    @*</main>*@
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

<script src="~/Scripts/SweeetAlert.js"></script>
@*<script>
        $(function () {
            $("input").click(function () {
                swal({
                    title: "Sorrry !!!",
                    text: "Seller is Successfully Rejected...!",
                    icon: "warning",
                    //button: "OK",
                    timer: 80000,
                });
            });
        });
    </script>*@
@*<script type="text/javascript">
        function Validate() {
            var reject = document.getElementById("#reason");
            if (reject.value == "") {
                //If the "Please Select" option is selected display error.
                alert("Please select an option!");
                return false;
            }
            return true;
        }
    </script>*@
@*<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript">
        $(function () {
            $("input").click(function () {
                var reject = $("#reason");
                if (reject.val() == "" || reject.val() != null) {
                    //If the "Please Select" option is selected display error.
                    alert("Please select an option!");
                    return false;
                }
                else {
                    swal({
                        title: "Sorrry !!!",
                        text: "Seller is Successfully Rejected...!",
                        icon: "warning",
                        //button: "OK",
                        timer: 80000,
                    });
                }
                return true;
            });
        });
    </script>*@
@*<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js">
    </script>
    <script type="text/javascript" language="javascript">
        $(document).ready(function () {
            debugger;
            var sk = $("#reason").text();
            $('input').click(function () {
                if (sk != "") {
                    var rejectionreason = document.getElementById("reason");
                    debugger;
                    $.ajax({
                        type: "POST",
                        url: "/Admin/RejectSellerStatus",
                        data: '{SellerCode: "' + rejectionreason + '" }',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            if (response.Success == "Success") {
                                swal({
                                    title: "Sorrry !!!",
                                    text: "Seller is Successfully Rejected...!",
                                    icon: "warning",
                                    //button: "OK",
                                    timer: 80000,
                                }).then(function () {
                                    window.location.href = "/Admin/PendingSellerList"
                                })
                            }
                            else {
                                swal({
                                    title: "Sorrry !!!",
                                    text: "Select the Rejection Reason..!",
                                    icon: "warning",
                                    //button: "OK",
                                    timer: 80000,
                                });
                            }
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    });

                    /*alert('Please select Department')*/
                    //swal({
                    //    title: "Sorrry !!!",
                    //    text: "Seller is Successfully Rejected...!",
                    //    icon: "warning",
                    //    //button: "OK",
                    //    timer: 80000,
                    //});
                    //return true;
                }
                else {
                    alert('Please select Department')
                    return false;
                }
            })
        });
    </script>*@


